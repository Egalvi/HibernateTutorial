<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--You should save the mapping document in a file with the format <classname>.hbm.xml-->

<hibernate-mapping>
    <class name="ru.egalvi.hibernatetutorial.simpleexample.Employee" table="EMPLOYEE">
        <meta attribute="class-description">
            This class contains the employee detail.
        </meta>
        <id name="id" type="int" column="id">
            <generator class="native"/>
        </id>
        <!--
        Collection type	Mapping and Description
        java.util.Set	        This is mapped with a <set> element and initialized with java.util.HashSet
        java.util.SortedSet	    This is mapped with a <set> element and initialized with java.util.TreeSet. The sort attribute can be set to either a comparator or natural ordering.
        java.util.List	        This is mapped with a <list> element and initialized with java.util.ArrayList
        java.util.Collection	This is mapped with a <bag> or <ibag> element and initialized with java.util.ArrayList
        java.util.Map	        This is mapped with a <map> element and initialized with java.util.HashMap
        java.util.SortedMap	    This is mapped with a <map> element and initialized with java.util.TreeMap. The sort attribute can be set to either a comparator or natural ordering.
        -->
        <set name="certificates" cascade="all">
            <key column="employee_id"/>
            <one-to-many class="ru.egalvi.hibernatetutorial.simpleexample.Certificate"/>
        </set>
        <set name="diplomas" cascade="save-update" table="EMP_DIP">
            <key column="employee_id"/>
            <many-to-many column="certificate_id" class="ru.egalvi.hibernatetutorial.simpleexample.Diploma"/>
        </set>
        <property name="firstName" column="first_name" type="string"/>
        <property name="lastName" column="last_name" type="string"/>
        <property name="salary" column="salary" type="int"/>
        <many-to-one name="address" column="address" class="ru.egalvi.hibernatetutorial.simpleexample.Address" not-null="true"/>
    </class>

    <class name="ru.egalvi.hibernatetutorial.simpleexample.Certificate" table="CERTIFICATE">
        <meta attribute="class-description">
            This class contains the certificate records.
        </meta>
        <id name="id" type="int" column="id">
            <generator class="native"/>
        </id>
        <property name="name" column="certificate_name" type="string"/>
    </class>

    <class name="ru.egalvi.hibernatetutorial.simpleexample.Address" table="ADDRESS">
        <meta attribute="class-description">
            This class contains the address detail.
        </meta>
        <id name="id" type="int" column="id">
            <generator class="native"/>
        </id>
        <property name="street" column="street_name" type="string"/>
        <property name="city" column="city_name" type="string"/>
        <property name="state" column="state_name" type="string"/>
        <property name="zipcode" column="zipcode" type="string"/>
    </class>

    <class name="ru.egalvi.hibernatetutorial.simpleexample.Diploma" table="DIPLOMA">
        <meta attribute="class-description">
            This class contains the diploma records.
        </meta>
        <id name="id" type="int" column="id">
            <generator class="native"/>
        </id>
        <property name="name" column="certificate_name" type="string"/>
    </class>
</hibernate-mapping>